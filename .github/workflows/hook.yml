name: Hook
on:
  workflow_dispatch:
    inputs:
      arguments:
        description: 'Client JSON Payload'
        type: string
        default: '{}'
        required: true
env:
  Deploy_Eventbridge: false
  Deploy_Glue: true
  Deploy_Lambda: false
  Deploy_SNS: false
  Deploy_SQS: false
  Deploy_SF: false
  Deploy_S3: true
  Deploy_APIGW: true

jobs:
  env:
    runs-on: ubuntu-latest
    steps:
      - name: Build Options JSON
        id: build_options_json
        run: |
          # Initialize an empty JSON object
          DEPLOY_LIST=()

          # Append options as JSON properties based on conditions
          if [ "${Deploy_Eventbridge}" == "true" ]; then
            DEPLOY_LIST+=("Deploy_Eventbridge")
          fi

          if [ "${Deploy_Glue}" == "true" ]; then
            DEPLOY_LIST+=("Deploy_Glue")
          fi

          if [ "${Deploy_Lambda}" == "true" ]; then
            DEPLOY_LIST+=("Deploy_Lambda")
          fi

          if [ "${Deploy_SNS}" == "true" ]; then
            DEPLOY_LIST+=("Deploy_SNS")
          fi

          if [ "${Deploy_SQS}" == "true" ]; then
            DEPLOY_LIST+=("Deploy_SQS")
          fi

          if [ "${Deploy_SF}" == "true" ]; then
            DEPLOY_LIST+=("Deploy_SF")
          fi

          if [ "${Deploy_S3}" == "true" ]; then
            DEPLOY_LIST+=("Deploy_S3")
          fi

          if [ "${Deploy_APIGW}" == "true" ]; then
            DEPLOY_LIST+=("Deploy_APIGW")
          fi          

          # Convert the array to a comma-separated string
          DEPLOY_LIST_STR=$(IFS=','; echo "${DEPLOY_LIST[*]}")
          echo "DEPLOY_LIST=$DEPLOY_LIST_STR" >> $GITHUB_ENV

      - name: Set Environment Variable
        run: |
          # Set the output from the previous step as an environment variable
          # echo "${{ steps.build_options_json.outputs.deploy_list }}"
          echo "${{ env.DEPLOY_LIST }}"
